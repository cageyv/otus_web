{"version":3,"sources":["config.js","NoAuthHeader.js","AuthedHeader.js","Header.js","Courses.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["path","require","url","myStyles","join","jquery","baseUrl","userUrl","resolve","loginUrl","studentSignupUrl","teacherSignupUrl","logoutUrl","adminUrl","feedbackUrl","myCoursesUrl","lecturingUrl","createUrl","coursesUrl","module","exports","NoAuthHeader","href","AuthedHeader","message","props","user","student","username","teacher","first_name","this","React","Component","Header","Jumbotron","Container","className","authorized","Courses","courses","map","course","key","id","name","started","Footer","axios","defaults","withCredentials","headers","App","state","authFetching","coursesFetching","get","params","then","response","data","setState","catch","error","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.5b80957c.chunk.js","sourcesContent":["const path = require('path');\nconst url = require('url');\nconst staticPath = './static';\n\nconst myStyles = path.join(staticPath, 'css/styles.css');\nconst jquery = path.join(staticPath, 'vendors/jquery/jquery-3.4.1.min.js');\n\n\nconst baseUrl = 'http://127.0.0.1:8000';\nconst userUrl = url.resolve(baseUrl, 'profiles-api/v2/user/');\nconst loginUrl = url.resolve(baseUrl, 'auth/login/?next=/profiles/student-signup/');\nconst studentSignupUrl = url.resolve(baseUrl, 'profiles/student-signup/');\nconst teacherSignupUrl = url.resolve(baseUrl, 'profiles/teacher-signup/');\nconst logoutUrl = url.resolve(baseUrl, 'auth/logout/');\nconst adminUrl = url.resolve(baseUrl, 'admin/');\nconst feedbackUrl = url.resolve(baseUrl, 'feedback/');\nconst myCoursesUrl = url.resolve(baseUrl, 'my-courses/');\nconst lecturingUrl = url.resolve(baseUrl, 'lecturing/');\nconst createUrl = url.resolve(baseUrl, 'create/');\nconst coursesUrl = url.resolve(baseUrl, 'api/v1/courses/');\n\nmodule.exports = {\n    baseUrl,\n    myStyles,\n    jquery,\n    userUrl,\n    loginUrl,\n    studentSignupUrl,\n    teacherSignupUrl,\n    logoutUrl,\n    adminUrl,\n    feedbackUrl,\n    myCoursesUrl,\n    lecturingUrl,\n    createUrl,\n    coursesUrl\n};\n","import React from 'react';\n\nimport './static/vendors/bootstrap/css/bootstrap.min.css';\n\nimport {\n    studentSignupUrl,\n    teacherSignupUrl,\n    loginUrl\n} from './config.js';\n\nfunction NoAuthHeader() {\n    return (\n        <>\n            Вы не авторизованы&nbsp;\n            <a href={loginUrl}>Войти</a>&nbsp;\n            <a href={studentSignupUrl}>Зарегистрироваться как учащийся</a>&nbsp;\n            <a href={teacherSignupUrl}>Зарегистрироваться как преподаватель</a>\n        </>\n    );\n}\n\nexport default NoAuthHeader;","import React from 'react';\n\nimport './static/vendors/bootstrap/css/bootstrap.min.css';\n\nimport {\n    logoutUrl,\n    adminUrl,\n    feedbackUrl,\n    myCoursesUrl,\n    lecturingUrl,\n    createUrl,\n} from './config.js';\n\n\nclass AuthedHeader extends React.Component {\n    message = () => {\n        let message = '';\n        if (this.props.user) {\n            if (this.props.user.student) {\n                message = <span>\n                    Привет, { this.props.user.username }!&nbsp;\n                    <a href={myCoursesUrl}>Твои курсы</a>&nbsp;\n                    <a href={feedbackUrl}>Оставить отзыв</a>\n                </span>\n            }\n            else if (this.props.user.teacher) {\n                message = <span>\n                    Здравствуйте, { this.props.user.first_name }.&nbsp;\n                    <a href={lecturingUrl}>Ваши курсы</a>&nbsp;\n                    <a href={createUrl}>Создать курс</a>\n                </span>\n            }\n            else {\n                message = <span>\n                    Здравствуйте, { this.props.user.username }.&nbsp;\n                    <a href={adminUrl}>Админка</a>\n                </span>\n            }\n        }\n        return message;\n    }\n\n    render() {\n        return (\n            <>\n                {this.message()}&nbsp;\n                <a href={logoutUrl}>Выйти</a>\n            </>\n        );\n    }\n}\n\nexport default AuthedHeader;","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\n\nimport './static/vendors/bootstrap/css/bootstrap.min.css';\nimport NoAuthHeader from './NoAuthHeader.js';\nimport AuthedHeader from './AuthedHeader.js';\n\n\nfunction Header(props) {\n    return (\n        <Jumbotron>\n            <Container>\n                <a className=\"glyphicon glyphicon-home\" href=\"/\"></a>&nbsp;\n                {\n                    props.authorized ? <AuthedHeader user={props.user}></AuthedHeader> : <NoAuthHeader></NoAuthHeader>\n                }\n            </Container>\n        </Jumbotron>\n    );\n}\n\nexport default Header;\n","import React from 'react';\n\nimport './static/vendors/bootstrap/css/bootstrap.min.css';\n\nimport { baseUrl } from './config.js';\n\nconst url = require('url');\n\nfunction Courses(props) {\n    return (\n        <ul>\n            {props.courses.map(\n                course => <li key={course.id}><a href={url.resolve(baseUrl, course.url)}>{course.name} {course.started}</a></li>\n            )}\n        </ul>\n    );\n}\n\nexport default Courses;\n","import React from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\n\nimport './static/vendors/bootstrap/css/bootstrap.min.css';\n\n\nfunction Footer() {\n    return (\n        <Jumbotron>\n            <Container>Все права защищены.</Container>\n        </Jumbotron>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport axios from 'axios';\n\nimport './static/vendors/bootstrap/css/bootstrap.min.css';\nimport Header from './Header.js';\nimport Courses from './Courses.js';\nimport Footer from './Footer.js';\n\nimport {\n    userUrl,\n    coursesUrl\n} from './config.js';\n\naxios.defaults.withCredentials = true;\nconst headers = {\n    \"Content-Type\": \"application/json\",\n\t\"Authorization\": \"Token 5e2fb99e4a7b8be11e8101afeef3f89664a438f1bb9fff154d8d275b20ca0a61\"\n}\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            authorized: false,\n            user: {},\n            authFetching: true,\n            coursesFetching: true,\n            courses: []\n        };\n    }\n    async componentDidMount() {\n        await axios.get(userUrl, {params: {}, headers: headers})\n        .then(response => response.data)\n        .then(data => this.setState({authorized: true, user: data, authFetching: false}))\n        .catch((error) => this.setState({ authorized: false, authFetching: false}))\n\n        await axios.get(coursesUrl)\n        .then(response => response.data)\n        .then(data => {this.setState({courses: data, coursesFetching: false})})\n        .catch((error) => this.setState({coursesFetching: false}))\n\n    }\n    render() {\n        const { authorized, user, authFetching, coursesFetching, courses } = this.state;\n        if (authFetching && coursesFetching) return <div>...Loading</div>;\n        return (\n            <>\n                <Header authorized={authorized} user={user} />\n                <Courses courses={courses} />\n                <Footer />\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}